/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basicsort;

import java.util.Comparator;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;
import sort.Queue;

/**
 *
 * @author gagandeepsingh
 */
public class SelectionSorterTest {

    public SelectionSorterTest() {
    }

    @BeforeClass
    public static void setUpClass() {
    }

    @AfterClass
    public static void tearDownClass() {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    // TODO add test methods here.
    // The methods must be annotated with annotation @Test. For example:
    //
    // @Test
    // public void hello() {}
//    @Test
//    public void testConstructor() {
//        Integer[] a = {1, 2, 3, 4, 5, 6, 7};
//
//        SelectionSorter in = new SelectionSorter(a);
//
//        assertEquals(a.length, in.getSize());
//
//    }
    @Test
    public void testSortInteger() {
        System.out.println("---------------SORT TEST INTEGER -------------");

        Object[] rightOrder = new Integer[7];

        for (int i = 0; i < rightOrder.length; i++) {
            rightOrder[i] = i + 1;

        }

        Integer[] wrongOrder = {4, 2, 7, 5, 3, 1, 6};

        SelectionSorter s = new SelectionSorter(wrongOrder);
        assertEquals(wrongOrder.length, s.getSize());

        Comparator com = (Comparator<Integer>) (Integer one, Integer two) -> {
            if (one < two) {
                return -1;
            } else {
                return 2;
            }
        };

        Queue q = s.sort(com);

        Object[] result = new Integer[wrongOrder.length];

        for (int i = 0; i < result.length; i++) {
            result[i] = q.get();

        }

        assertArrayEquals(rightOrder, result);

    }

    @Test
    public void testSortString() {
        System.out.println("------------------SORT TEST STRING ---------------");

        String[] rightOrder = {"Alan", "Anna", "Daniel", "Hans", "Markus", "Rick", "Sebastian", "Xona"};

        String[] wrongOrder = {"Anna", "Daniel", "Alan", "Xona", "Rick", "Sebastian", "Markus", "Hans"};

        SelectionSorter s = new SelectionSorter(wrongOrder);

        assertEquals(wrongOrder.length, s.getSize());

        Comparator com = (Comparator<String>) (String one, String two) -> {
            if (one.compareTo(two) < 0) {
                return -1;
            } else {
                return 3;
            }
        };
        Queue q = s.sort(com);

        Object[] result = new String[wrongOrder.length];

        for (int i = 0; i < result.length; i++) {
            result[i] = q.get();

        }
        assertArrayEquals(rightOrder, result);
    }
}
