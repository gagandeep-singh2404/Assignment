/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basicsort;

import java.util.Comparator;
import sort.Queue;
import sort.Sort;

/**
 *
 * @author gagandeepsingh
 */
public class SelectionSorter<E> implements Sort {

    private Node<E> head = new Node(null);
    private final int SIZE;

    private static class Node<E> {

        //TODO: implement a linked list inner class.
        private Node<E> next;
        private E item;

        public Node(E item) {
            // head
            this.item = item;
            this.next = null;
        }

        public Node(E item, Node<E> next) {
            this.item = item;
            this.next = next;
        }
    }

    public SelectionSorter(E[] e) {
        head.next = new Node(null);
        SIZE = e.length;

        Node<E> nodeList = head;
        for (int i = 0; i < e.length; i++) {
            nodeList.next = new Node(e[i]);
            nodeList = nodeList.next;
        }

    }

    public int getSize() {
        Node<E> nodeList = head;
        int counter = 0;
        while (nodeList.next != null) {
            counter++;

            nodeList = nodeList.next;
        }
        return counter;
    }

    @Override
    public Queue sort(Comparator comparator) {

        for (Node<E> i = head.next; i != null; i = i.next) {
            Node<E> min = i;
            System.out.println("--------- First min-------\n" + min.item);
            for (Node<E> j = i.next; j != null; j = j.next) {
                System.out.println("-----------j---------\n" + j.item);
            }

        }

        Node<E> nodeList = head.next;
        Queue q = new Queue();

        while (nodeList.next
                != null) {

            q.put(nodeList.item);
            System.out.println("" + nodeList.item);

            nodeList = nodeList.next;
        }
        return q;
    }

}
